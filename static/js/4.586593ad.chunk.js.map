{"version":3,"sources":["components/UI/Input/Input.jsx","components/UI/Input/Input.module.scss","containers/Auth/Auth.module.scss","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_scss__WEBPACK_IMPORTED_MODULE_1__","_Input_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","validationError","ErrorMessage","Label","label","module","exports","Auth","_Component","_getPrototypeOf2","_this","C_Users_konoj_Desktop_JSProjects_react_burger_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","C_Users_konoj_Desktop_JSProjects_react_burger_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_konoj_Desktop_JSProjects_react_burger_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","concat","state","controls","email","type","placeholder","validation","required","isEmail","valid","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","updateObject","C_Users_konoj_Desktop_JSProjects_react_burger_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","onAuth","switchAuthModeHandler","prevState","C_Users_konoj_Desktop_JSProjects_react_burger_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","C_Users_konoj_Desktop_JSProjects_react_burger_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElementsArray","id","config","form","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_10__","e","formContent","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_12__","errorMessage","error","message","signButtonText","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_11__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions"],"mappings":"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","file":"static/js/4.586593ad.chunk.js","sourcesContent":["import React from 'react'\r\nimport classes from './Input.module.scss';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            inputElement =\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n    }\r\n\r\n    let validationError = props.invalid && props.touched ? <p className={classes.ErrorMessage}>Please enter a valid value!</p> : null;\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2MO3H\",\"ErrorMessage\":\"Input_ErrorMessage__1chsh\",\"Label\":\"Input_Label__2nJzn\",\"InputElement\":\"Input_InputElement__2FyhA\",\"Invalid\":\"Input_Invalid__Xx0wA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1wFQa\"};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport classes from './Auth.module.scss';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nimport * as actions from '../../store/actions/';\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\n\r\nexport class Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'E-mail address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignUp: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = updateObject(this.state.controls, {\r\n            [controlName]: updateObject(this.state.controls[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            })\r\n        })\r\n        this.setState({ controls: updatedControls });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignUp: !prevState.isSignUp\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            })\r\n        }\r\n\r\n        const form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(e) => this.inputChangedHandler(e, formElement.id)}\r\n            />\r\n        ))\r\n\r\n        let formContent = this.props.loading ? <Spinner /> : form;\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        const signButtonText = this.state.isSignUp ? \"SWITCH TO SIGN IN\" : \"SWITCH TO SIGN UP\";\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {formContent}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button\r\n                    btnType=\"Danger\"\r\n                    clicked={this.switchAuthModeHandler}>{signButtonText}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"],"sourceRoot":""}