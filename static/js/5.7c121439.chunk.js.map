{"version":3,"sources":["components/Order/Order.module.scss","components/Order/Order.jsx","containers/Orders/Orders.jsx"],"names":["module","exports","Order","Ingredient","_ref","_ref$ingredients","ingredients","price","ingredientsParsed","Object","keys","map","ingredient","react_default","a","createElement","key","className","classes","toFixed","Orders","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","onFetchOrders","token","orders","Spinner","loading","order","components_Order_Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,qBAAAC,WAAA,6JCoBHD,EAlBD,SAAAE,GAAiC,IAAAC,EAAAD,EAA9BE,mBAA8B,IAAAD,EAAhB,GAAgBA,EAAZE,EAAYH,EAAZG,MAEzBC,EAAoBC,OAAOC,KAAKJ,GAAaK,IAAI,SAAAC,GACnD,OACIC,EAAAC,EAAAC,cAAA,QAAMC,IAAKJ,EAAYK,UAAWC,IAAQf,YACrCS,EADL,IACkBN,EAAYM,GAD9B,OAMR,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQhB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBP,GACjBK,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaR,EAAMY,QAAQ,oECR1C,IAAMC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAc,KAAAH,GAAAX,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAW,GAAAM,MAAAH,KAAAI,YAAA,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAAW,EAAAC,GAAAZ,OAAAoB,EAAA,EAAApB,CAAAW,EAAA,EAAAJ,IAAA,oBAAAc,MAAA,WAGQP,KAAKQ,MAAMC,cAAcT,KAAKQ,MAAME,SAH5C,CAAAjB,IAAA,SAAAc,MAAA,WAOQ,IAAII,EAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MAWb,OAVKZ,KAAKQ,MAAMK,UACZF,EAASX,KAAKQ,MAAMG,OAAOvB,IAAI,SAAA0B,GAC3B,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,CACHtB,IAAKqB,EAAME,GACXjC,YAAa+B,EAAM/B,YACnBC,MAAO8B,EAAM9B,WAMrBM,EAAAC,EAAAC,cAAA,WACKmB,OApBjBd,EAAA,CAA4BoB,aAwCbC,sBAdS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAML,MAAMH,OACpBE,QAASM,EAAML,MAAMD,QACrBH,MAAOS,EAAMC,KAAKV,QAIC,SAAAW,GACvB,MAAO,CACHZ,cAAe,SAACC,GAAD,OAAWW,EAASC,IAAoBZ,OAIhDQ,CAA6CK,YAAiB1B,EAAQ2B","file":"static/js/5.7c121439.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1zzvH\",\"Ingredient\":\"Order_Ingredient__2Q9Ts\"};","import React from 'react'\r\nimport classes from './Order.module.scss'\r\n\r\nconst Order = ({ ingredients = {}, price }) => {\r\n\r\n    const ingredientsParsed = Object.keys(ingredients).map(ingredient => {\r\n        return (\r\n            <span key={ingredient} className={classes.Ingredient}>\r\n                {ingredient}({ingredients[ingredient]})\r\n            </span>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientsParsed}</p>\r\n            <p>Price: <strong>USD {price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios-orders.js'\r\nimport withErrorHandler from 'hoc/withErrorHandler/withErrorHandler'\r\nimport Order from 'components/Order/Order'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nexport class Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => {\r\n                return <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}\r\n                />\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}